# Test de compilation du frontend avec les nouvelles fonctionnalit√©s GPS
# Ce script v√©rifie que le frontend peut √™tre compil√© sans erreurs

Write-Host "üî® Test de compilation du frontend" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan

# V√©rifier que nous sommes dans le bon r√©pertoire
if (!(Test-Path "frontend/package.json")) {
    Write-Host "‚ùå Erreur: Le fichier frontend/package.json n'existe pas" -ForegroundColor Red
    Write-Host "Veuillez ex√©cuter ce script depuis la racine du projet" -ForegroundColor Yellow
    exit 1
}

# Aller dans le r√©pertoire frontend
Set-Location frontend

Write-Host "`nüìã V√©rification des d√©pendances..." -ForegroundColor Yellow

# V√©rifier que node_modules existe
if (!(Test-Path "node_modules")) {
    Write-Host "‚ö†Ô∏è  node_modules n'existe pas, installation des d√©pendances..." -ForegroundColor Yellow
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
        exit 1
    }
}

Write-Host "‚úÖ D√©pendances v√©rifi√©es" -ForegroundColor Green

Write-Host "`nüîç V√©rification des fichiers de g√©olocalisation..." -ForegroundColor Yellow

# V√©rifier que tous les fichiers de g√©olocalisation existent
$geolocationFiles = @(
    "src/hooks/geolocation/useGeolocation.ts",
    "src/hooks/geolocation/useGeolocationPermission.ts",
    "src/hooks/geolocation/useGeolocationAccuracy.ts",
    "src/hooks/geolocation/useGeocoding.ts",
    "src/hooks/geolocation/useGeolocationManager.ts",
    "src/hooks/useGpsAccuracy.ts",
    "src/utils/geolocation/validation.ts",
    "src/utils/geolocation/geocoding.ts",
    "src/utils/geolocation/accuracy.ts",
    "src/components/geolocation/GeolocationPermission.tsx",
    "src/components/geolocation/GeolocationStatus.tsx",
    "src/components/geolocation/GeolocationInput.tsx",
    "src/components/geolocation/LocationPicker.tsx",
    "src/components/geolocation/GpsAccuracyDisplay.tsx"
)

$missingFiles = @()
foreach ($file in $geolocationFiles) {
    if (!(Test-Path $file)) {
        $missingFiles += $file
    }
}

if ($missingFiles.Count -gt 0) {
    Write-Host "‚ùå Fichiers manquants:" -ForegroundColor Red
    foreach ($file in $missingFiles) {
        Write-Host "  ‚Ä¢ $file" -ForegroundColor Red
    }
    exit 1
}

Write-Host "‚úÖ Tous les fichiers de g√©olocalisation sont pr√©sents" -ForegroundColor Green

Write-Host "`nüîß Test de compilation TypeScript..." -ForegroundColor Yellow

# Test de compilation TypeScript
try {
    npx tsc --noEmit --skipLibCheck
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Compilation TypeScript r√©ussie" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreurs de compilation TypeScript" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erreur lors de la compilation TypeScript: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "`nüèóÔ∏è Test de build de production..." -ForegroundColor Yellow

# Test de build de production
try {
    npm run build
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Build de production r√©ussi" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur lors du build de production" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erreur lors du build: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "`nüß™ Test de d√©marrage du serveur de d√©veloppement..." -ForegroundColor Yellow

# D√©marrer le serveur de d√©veloppement en arri√®re-plan
$devServer = Start-Job -ScriptBlock {
    Set-Location $using:PWD
    npm run dev
}

# Attendre un peu pour que le serveur d√©marre
Start-Sleep -Seconds 10

# V√©rifier que le serveur r√©pond
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5173" -Method GET -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Serveur de d√©veloppement d√©marr√© avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Serveur de d√©veloppement ne r√©pond pas correctement" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Impossible de se connecter au serveur de d√©veloppement" -ForegroundColor Red
}

# Arr√™ter le serveur de d√©veloppement
Stop-Job $devServer
Remove-Job $devServer

Write-Host "`nüìä R√©sum√© des tests:" -ForegroundColor Cyan
Write-Host "‚úÖ D√©pendances install√©es" -ForegroundColor Green
Write-Host "‚úÖ Fichiers de g√©olocalisation pr√©sents" -ForegroundColor Green
Write-Host "‚úÖ Compilation TypeScript r√©ussie" -ForegroundColor Green
Write-Host "‚úÖ Build de production r√©ussi" -ForegroundColor Green
Write-Host "‚úÖ Serveur de d√©veloppement fonctionnel" -ForegroundColor Green

Write-Host "`nüéØ Prochaines √©tapes:" -ForegroundColor Cyan
Write-Host "1. Ex√©cutez les tests de fonctionnalit√©s GPS" -ForegroundColor White
Write-Host "2. Ex√©cutez les tests des composants" -ForegroundColor White
Write-Host "3. Testez l'int√©gration dans l'application" -ForegroundColor White

Write-Host "`n‚ú® Frontend pr√™t pour les tests de g√©olocalisation !" -ForegroundColor Green

# Retourner au r√©pertoire racine
Set-Location ..
