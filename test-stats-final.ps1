# Test final de l'endpoint des statistiques apr√®s correction PostgreSQL
Write-Host "Test final de l'endpoint des statistiques" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green
Write-Host "V√©rification de la correction du probl√®me PostgreSQL" -ForegroundColor Cyan

$baseUrl = "http://localhost:8080"
$endpoint = "/api/v1/prices/stats"

Write-Host "`nüîç Test 1: Endpoint avec param√®tres par d√©faut (30 jours)" -ForegroundColor Yellow

try {
    $response = Invoke-RestMethod -Uri "$baseUrl$endpoint" -Method Get -ContentType "application/json"
    Write-Host "‚úÖ SUCC√àS ! L'endpoint fonctionne maintenant" -ForegroundColor Green
    Write-Host "Total prices: $($response.totalPrices)" -ForegroundColor Cyan
    Write-Host "Period days: $($response.periodDays)" -ForegroundColor Cyan
    
    if ($response.minPrice) {
        Write-Host "Min price: $($response.minPrice)" -ForegroundColor Cyan
    }
    if ($response.maxPrice) {
        Write-Host "Max price: $($response.maxPrice)" -ForegroundColor Cyan
    }
    if ($response.averagePrice) {
        Write-Host "Average price: $($response.averagePrice)" -ForegroundColor Cyan
    }
    
    Write-Host "`nüéØ Probl√®me PostgreSQL r√©solu !" -ForegroundColor Green
    Write-Host "‚úÖ Pas d'erreur 'could not determine data type of parameter'" -ForegroundColor Green
    Write-Host "‚úÖ Requ√™te SQL g√©n√©r√©e sans ambigu√Øt√© de type" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå ERREUR : L'endpoint ne fonctionne toujours pas" -ForegroundColor Red
    Write-Host "Status: $($_.Exception.Response.StatusCode)" -ForegroundColor Red
    Write-Host "Message: $($_.Exception.Message)" -ForegroundColor Red
    
    if ($_.Exception.Response.StatusCode -eq 500) {
        Write-Host "`nüí° Suggestions de d√©bogage :" -ForegroundColor Yellow
        Write-Host "1. V√©rifiez que l'application a √©t√© red√©marr√©e" -ForegroundColor Yellow
        Write-Host "2. V√©rifiez les logs de l'application" -ForegroundColor Yellow
        Write-Host "3. V√©rifiez que la base de donn√©es est accessible" -ForegroundColor Yellow
        Write-Host "4. V√©rifiez que les tables existent et contiennent des donn√©es" -ForegroundColor Yellow
    }
}

Write-Host "`nüîç Test 2: Endpoint avec param√®tres personnalis√©s (7 jours)" -ForegroundColor Yellow

try {
    $response = Invoke-RestMethod -Uri "$baseUrl$endpoint?days=7" -Method Get -ContentType "application/json"
    Write-Host "‚úÖ SUCC√àS ! Param√®tres personnalis√©s fonctionnent" -ForegroundColor Green
    Write-Host "Period days: $($response.periodDays)" -ForegroundColor Cyan
    Write-Host "Total prices: $($response.totalPrices)" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå ERREUR avec param√®tres personnalis√©s" -ForegroundColor Red
    Write-Host "Message: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüîç Test 3: Endpoint avec filtre par r√©gion" -ForegroundColor Yellow

try {
    $response = Invoke-RestMethod -Uri "$baseUrl$endpoint?days=30&region=ABJ" -Method Get -ContentType "application/json"
    Write-Host "‚úÖ SUCC√àS ! Filtre par r√©gion fonctionne" -ForegroundColor Green
    Write-Host "Total prices: $($response.totalPrices)" -ForegroundColor Cyan
    Write-Host "Region filter: ABJ" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå ERREUR avec filtre par r√©gion" -ForegroundColor Red
    Write-Host "Message: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ R√©sum√© des tests :" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green

if ($response.totalPrices -gt 0) {
    Write-Host "‚úÖ Endpoint des statistiques fonctionne correctement" -ForegroundColor Green
    Write-Host "‚úÖ Probl√®me PostgreSQL r√©solu" -ForegroundColor Green
    Write-Host "‚úÖ Requ√™tes SQL g√©n√©r√©es sans ambigu√Øt√©" -ForegroundColor Green
    Write-Host "‚úÖ Donn√©es r√©cup√©r√©es avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Endpoint fonctionne mais aucune donn√©e trouv√©e" -ForegroundColor Yellow
    Write-Host "üí° V√©rifiez que la base de donn√©es contient des prix" -ForegroundColor Yellow
}

Write-Host "`nüöÄ Test termin√© avec succ√®s !" -ForegroundColor Green
Write-Host "L'endpoint des statistiques est maintenant op√©rationnel." -ForegroundColor Cyan
