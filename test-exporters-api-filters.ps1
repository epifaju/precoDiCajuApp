# Test API Exportateurs avec Filtres
# Ce script teste l'API des exportateurs avec diff√©rents filtres pour v√©rifier qu'il n'y a pas d'erreur cyclique

Write-Host "üîß Test API Exportateurs - Filtres Avanc√©s" -ForegroundColor Cyan
Write-Host "=" * 50

# Configuration
$baseUrl = "http://localhost:8080/api/v1"
$headers = @{
    "Content-Type" = "application/json"
    "Accept" = "application/json"
}

# Fonction pour tester une requ√™te
function Test-ExportersRequest {
    param(
        [string]$Description,
        [string]$Url,
        [hashtable]$Params = @{}
    )
    
    Write-Host "`nüß™ $Description" -ForegroundColor Yellow
    
    try {
        $queryString = ""
        if ($Params.Count -gt 0) {
            $queryString = "?" + (($Params.GetEnumerator() | ForEach-Object { "$($_.Key)=$($_.Value)" }) -join "&")
        }
        
        $fullUrl = $Url + $queryString
        Write-Host "   URL: $fullUrl" -ForegroundColor Gray
        
        $response = Invoke-RestMethod -Uri $fullUrl -Method GET -Headers $headers -TimeoutSec 10
        
        if ($response -and $response.content) {
            Write-Host "   ‚úÖ Succ√®s: $($response.content.Count) exportateurs trouv√©s" -ForegroundColor Green
            Write-Host "   üìä Total: $($response.totalElements), Pages: $($response.totalPages)" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö†Ô∏è R√©ponse vide ou invalide" -ForegroundColor Yellow
        }
        
        return $true
    }
    catch {
        Write-Host "   ‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
        if ($_.Exception.Response) {
            $statusCode = $_.Exception.Response.StatusCode
            Write-Host "   üìä Code de statut: $statusCode" -ForegroundColor Red
        }
        return $false
    }
}

# V√©rifier si le backend est accessible
Write-Host "`nüîç V√©rification du backend..." -ForegroundColor Yellow
try {
    $healthResponse = Invoke-RestMethod -Uri "$baseUrl/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible. D√©marrez le backend d'abord." -ForegroundColor Red
    Write-Host "   Commande: cd backend && mvn spring-boot:run" -ForegroundColor Yellow
    exit 1
}

Write-Host "`nüöÄ D√©but des tests API..." -ForegroundColor Cyan

# Test 1: Requ√™te de base sans filtres
Test-ExportersRequest -Description "Test 1: Exportateurs sans filtres" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
}

# Test 2: Filtre par r√©gion
Test-ExportersRequest -Description "Test 2: Filtre par r√©gion (Bafata)" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
    regionCode = "BF"
}

# Test 3: Filtre par type
Test-ExportersRequest -Description "Test 3: Filtre par type (EXPORTATEUR)" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
    type = "EXPORTATEUR"
}

# Test 4: Filtre par statut
Test-ExportersRequest -Description "Test 4: Filtre par statut (ACTIF)" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
    statut = "ACTIF"
}

# Test 5: Filtre par nom (recherche)
Test-ExportersRequest -Description "Test 5: Filtre par nom (recherche)" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
    nom = "test"
}

# Test 6: Filtres combin√©s
Test-ExportersRequest -Description "Test 6: Filtres combin√©s (r√©gion + type)" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "nom"
    sortDir = "asc"
    regionCode = "BF"
    type = "EXPORTATEUR"
}

# Test 7: Tri par date d'expiration
Test-ExportersRequest -Description "Test 7: Tri par date d'expiration" -Url "$baseUrl/exportateurs" -Params @{
    page = 0
    size = 10
    sortBy = "dateExpiration"
    sortDir = "desc"
}

# Test 8: Pagination
Test-ExportersRequest -Description "Test 8: Pagination (page 1)" -Url "$baseUrl/exportateurs" -Params @{
    page = 1
    size = 5
    sortBy = "nom"
    sortDir = "asc"
}

Write-Host "`nüìä R√©sum√© des tests:" -ForegroundColor Cyan
Write-Host "‚úÖ Tous les tests API ont √©t√© ex√©cut√©s" -ForegroundColor Green
Write-Host "üîç V√©rifiez les r√©sultats ci-dessus pour d√©tecter d'√©ventuelles erreurs" -ForegroundColor Yellow
Write-Host "üí° Si tous les tests passent, l'erreur cyclique est corrig√©e c√¥t√© backend" -ForegroundColor Green

Write-Host "`nüåê Testez maintenant l'interface utilisateur:" -ForegroundColor Yellow
Write-Host "   Ouvrez http://localhost:3001/exporters dans votre navigateur" -ForegroundColor White
Write-Host "   Utilisez les filtres avanc√©s et v√©rifiez la console du navigateur" -ForegroundColor White

Write-Host "`n‚ú® Tests termin√©s!" -ForegroundColor Green
