# Script de test pour la fonctionnalit√© WebSocket
# Ce script teste la connexion WebSocket et les notifications temps r√©el

Write-Host "üöÄ Test de la fonctionnalit√© WebSocket - Pre√ßo di Caj√∫" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# V√©rifier que les services sont d√©marr√©s
Write-Host "`nüìã V√©rification des services..." -ForegroundColor Yellow

# Test de l'API backend
Write-Host "`nüîç Test de l'API backend..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/actuator/health" -Method GET
    if ($response.status -eq "UP") {
        Write-Host "‚úÖ Backend API: OK" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Backend API: Probl√®me" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Backend API: Non accessible" -ForegroundColor Red
    Write-Host "   Assurez-vous que le backend est d√©marr√© sur http://localhost:8080" -ForegroundColor Yellow
    exit 1
}

# Test de l'endpoint WebSocket
Write-Host "`nüîç Test de l'endpoint WebSocket..." -ForegroundColor Cyan
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/ws" -Method GET -ErrorAction Stop
    Write-Host "‚úÖ Endpoint WebSocket: Accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Endpoint WebSocket: Non accessible" -ForegroundColor Red
    Write-Host "   V√©rifiez la configuration WebSocket dans le backend" -ForegroundColor Yellow
}

# Test de l'authentification
Write-Host "`nüîç Test de l'authentification..." -ForegroundColor Cyan
try {
    $loginData = @{
        email = "admin@precaju.com"
        password = "admin123"
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/auth/login" -Method POST -Body $loginData -ContentType "application/json"
    
    if ($response.accessToken) {
        Write-Host "‚úÖ Authentification: OK" -ForegroundColor Green
        $token = $response.accessToken
    } else {
        Write-Host "‚ùå Authentification: √âchec" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Authentification: Erreur" -ForegroundColor Red
    Write-Host "   V√©rifiez les identifiants de test" -ForegroundColor Yellow
    exit 1
}

# Test de creation d'un prix (pour declencher les WebSockets)
Write-Host "`nüîç Test de creation d'un prix..." -ForegroundColor Cyan
try {
    $headers = @{
        "Authorization" = "Bearer $token"
        "Content-Type" = "application/json"
    }

    $priceData = @{
        regionCode = "BIS"
        qualityGrade = "W180"
        priceFcfa = 2500
        recordedDate = (Get-Date).ToString("yyyy-MM-dd")
        sourceName = "Test WebSocket"
        sourceType = "MARKET"
        notes = "Test de notification WebSocket"
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/prices" -Method POST -Body $priceData -Headers $headers
    
    if ($response.id) {
        Write-Host "‚úÖ Creation de prix: OK (ID: $($response.id))" -ForegroundColor Green
        $priceId = $response.id
    } else {
        Write-Host "‚ùå Creation de prix: Echec" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Creation de prix: Erreur" -ForegroundColor Red
    Write-Host "   Details: $($_.Exception.Message)" -ForegroundColor Yellow
}

# Test des statistiques
Write-Host "`nüîç Test des statistiques..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/prices/stats" -Method GET -Headers $headers
    
    if ($response.totalPrices) {
        Write-Host "‚úÖ Statistiques: OK ($($response.totalPrices) prix)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Statistiques: Probl√®me" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Statistiques: Erreur" -ForegroundColor Red
}

# Instructions pour tester le frontend
Write-Host "`nüåê Instructions pour tester le frontend:" -ForegroundColor Magenta
Write-Host "=====================================" -ForegroundColor Magenta
Write-Host "1. D√©marrez le frontend: cd frontend && npm run dev" -ForegroundColor White
Write-Host "2. Ouvrez http://localhost:3000 dans votre navigateur" -ForegroundColor White
Write-Host "3. Connectez-vous avec admin@precaju.com / admin123" -ForegroundColor White
Write-Host "4. Allez sur le Dashboard pour voir l'indicateur de connexion WebSocket" -ForegroundColor White
Write-Host "5. Ouvrez plusieurs onglets et cr√©ez un nouveau prix" -ForegroundColor White
Write-Host "6. V√©rifiez que les notifications apparaissent en temps r√©el" -ForegroundColor White

Write-Host "`nüìä Fonctionnalit√©s WebSocket impl√©ment√©es:" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green
Write-Host "‚úÖ Connexion WebSocket avec authentification JWT" -ForegroundColor Green
Write-Host "‚úÖ Notifications de nouveaux prix" -ForegroundColor Green
Write-Host "‚úÖ Notifications de mises √† jour de prix" -ForegroundColor Green
Write-Host "‚úÖ Notifications de v√©rification de prix" -ForegroundColor Green
Write-Host "‚úÖ Alertes de variations de prix significatives" -ForegroundColor Green
Write-Host "‚úÖ Mises √† jour de statistiques en temps r√©el" -ForegroundColor Green
Write-Host "‚úÖ Reconnexion automatique" -ForegroundColor Green
Write-Host "‚úÖ Indicateurs de statut de connexion" -ForegroundColor Green
Write-Host "‚úÖ Notifications toast multilingues" -ForegroundColor Green

Write-Host "`nüéâ Test termin√© avec succ√®s!" -ForegroundColor Green
Write-Host "La fonctionnalit√© WebSocket est pr√™te √† √™tre utilis√©e." -ForegroundColor Green
