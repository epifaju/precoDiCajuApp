#!/usr/bin/env pwsh

Write-Host "üöÄ D√©marrage de l'application avec corrections CORS" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan

# Fonction pour v√©rifier si un port est utilis√©
function Test-Port {
    param([int]$Port)
    try {
        $connection = New-Object System.Net.Sockets.TcpClient
        $connection.Connect("localhost", $Port)
        $connection.Close()
        return $true
    } catch {
        return $false
    }
}

# V√©rifier les ports
Write-Host "`n1. V√©rification des ports..." -ForegroundColor Yellow

if (Test-Port 8080) {
    Write-Host "‚úÖ Port 8080 (Backend) - d√©j√† utilis√©" -ForegroundColor Green
    $backendRunning = $true
} else {
    Write-Host "‚ö†Ô∏è  Port 8080 (Backend) - libre" -ForegroundColor Yellow
    $backendRunning = $false
}

if (Test-Port 3001) {
    Write-Host "‚ö†Ô∏è  Port 3001 (Frontend) - d√©j√† utilis√©" -ForegroundColor Yellow
    Write-Host "   Arr√™t du processus sur le port 3001..." -ForegroundColor Gray
    
    try {
        $process = Get-NetTCPConnection -LocalPort 3001 -ErrorAction SilentlyContinue | 
                   ForEach-Object { Get-Process -Id $_.OwningProcess -ErrorAction SilentlyContinue } |
                   Select-Object -First 1
        
        if ($process) {
            Stop-Process -Id $process.Id -Force
            Start-Sleep -Seconds 2
            Write-Host "   ‚úÖ Processus arr√™t√©" -ForegroundColor Green
        }
    } catch {
        Write-Host "   ‚ö†Ô∏è  Impossible d'arr√™ter le processus" -ForegroundColor Yellow
    }
}

# D√©marrer le backend si n√©cessaire
if (-not $backendRunning) {
    Write-Host "`n2. D√©marrage du backend..." -ForegroundColor Yellow
    
    $backendPath = "backend"
    if (Test-Path $backendPath) {
        Set-Location $backendPath
        
        # V√©rifier si Maven est disponible
        try {
            $mvnVersion = mvn -version 2>$null
            Write-Host "‚úÖ Maven disponible" -ForegroundColor Green
            
            Write-Host "   Compilation du backend..." -ForegroundColor Gray
            mvn clean compile -q
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host "   ‚úÖ Compilation r√©ussie" -ForegroundColor Green
                
                Write-Host "   D√©marrage du serveur Spring Boot..." -ForegroundColor Gray
                Start-Process -FilePath "mvn" -ArgumentList "spring-boot:run" -WindowStyle Minimized
                
                # Attendre que le backend soit pr√™t
                Write-Host "   Attente du d√©marrage du backend..." -ForegroundColor Gray
                $maxWait = 60 # 60 secondes
                $waited = 0
                
                do {
                    Start-Sleep -Seconds 2
                    $waited += 2
                    
                    if (Test-Port 8080) {
                        Write-Host "   ‚úÖ Backend d√©marr√© (port 8080)" -ForegroundColor Green
                        break
                    }
                    
                    Write-Host "   ... ($waited/${maxWait}s)" -NoNewline
                    Write-Host "`r" -NoNewline
                } while ($waited -lt $maxWait)
                
                if ($waited -ge $maxWait) {
                    Write-Host "   ‚ùå Timeout - Backend non d√©marr√©" -ForegroundColor Red
                    exit 1
                }
            } else {
                Write-Host "   ‚ùå Erreur de compilation" -ForegroundColor Red
                exit 1
            }
        } catch {
            Write-Host "‚ùå Maven non disponible - veuillez installer Maven" -ForegroundColor Red
            exit 1
        }
        
        Set-Location ..
    } else {
        Write-Host "‚ùå Dossier backend non trouv√©" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "`n2. Backend d√©j√† en cours d'ex√©cution" -ForegroundColor Green
}

# D√©marrer le frontend
Write-Host "`n3. D√©marrage du frontend..." -ForegroundColor Yellow

$frontendPath = "frontend"
if (Test-Path $frontendPath) {
    Set-Location $frontendPath
    
    # V√©rifier si npm est disponible
    try {
        $npmVersion = npm --version 2>$null
        Write-Host "‚úÖ npm disponible (version: $npmVersion)" -ForegroundColor Green
        
        # Installer les d√©pendances si n√©cessaire
        if (-not (Test-Path "node_modules")) {
            Write-Host "   Installation des d√©pendances..." -ForegroundColor Gray
            npm install
        }
        
        Write-Host "   D√©marrage du serveur de d√©veloppement..." -ForegroundColor Gray
        Write-Host "   Frontend accessible sur: http://localhost:3001" -ForegroundColor Cyan
        
        # D√©marrer le serveur de d√©veloppement
        npm run dev
        
    } catch {
        Write-Host "‚ùå npm non disponible - veuillez installer Node.js" -ForegroundColor Red
        Set-Location ..
        exit 1
    }
    
    Set-Location ..
} else {
    Write-Host "‚ùå Dossier frontend non trouv√©" -ForegroundColor Red
    exit 1
}

Write-Host "`nüéâ Application d√©marr√©e avec succ√®s!" -ForegroundColor Green
Write-Host "`nüìã Informations:" -ForegroundColor Cyan
Write-Host "- Backend: http://localhost:8080" -ForegroundColor White
Write-Host "- Frontend: http://localhost:3001" -ForegroundColor White
Write-Host "- API Health: http://localhost:8080/actuator/health" -ForegroundColor White

Write-Host "`nüîß Corrections appliqu√©es:" -ForegroundColor Cyan
Write-Host "- Configuration CORS am√©lior√©e" -ForegroundColor White
Write-Host "- Timeouts augment√©s (15s)" -ForegroundColor White
Write-Host "- Gestion d'erreurs optimis√©e" -ForegroundColor White
Write-Host "- Retry logic impl√©ment√©e" -ForegroundColor White

Write-Host "`nüí° Pour tester les corrections:" -ForegroundColor Cyan
Write-Host "1. Ouvrez http://localhost:3001 dans votre navigateur" -ForegroundColor White
Write-Host "2. Ouvrez les outils de d√©veloppement (F12)" -ForegroundColor White
Write-Host "3. V√©rifiez l'onglet Console pour les erreurs" -ForegroundColor White
Write-Host "4. Testez les fonctionnalit√©s d'exportateurs" -ForegroundColor White

Write-Host "`n‚úÖ Pr√™t √† utiliser!" -ForegroundColor Green

