# Test de correction v3 - Erreur Cyclique Exportateurs
# Cette version teste une approche encore plus robuste avec une liste blanche de propri√©t√©s

Write-Host "üîß Test de Correction v3 - Erreur Cyclique Exportateurs" -ForegroundColor Cyan
Write-Host "=" * 60

Write-Host "`nüîç V√©rification des services..." -ForegroundColor Yellow

# V√©rifier si le backend est en cours d'ex√©cution
try {
    $backendResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible. D√©marrez le backend d'abord." -ForegroundColor Red
    Write-Host "   Commande: cd backend && mvn spring-boot:run" -ForegroundColor Yellow
    exit 1
}

# V√©rifier si le frontend est en cours d'ex√©cution
try {
    $frontendResponse = Invoke-WebRequest -Uri "http://localhost:3001" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Frontend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Frontend non accessible. D√©marrez le frontend d'abord." -ForegroundColor Red
    Write-Host "   Commande: cd frontend && npm run dev" -ForegroundColor Yellow
    exit 1
}

Write-Host "`nüîß Corrections Appliqu√©es (v3):" -ForegroundColor Cyan
Write-Host "‚Ä¢ Liste blanche de propri√©t√©s autoris√©es" -ForegroundColor White
Write-Host "‚Ä¢ Cr√©ation d'un objet compl√®tement nouveau" -ForegroundColor White
Write-Host "‚Ä¢ Gestion d'erreur avec try/catch" -ForegroundColor White
Write-Host "‚Ä¢ Conversion explicite en string de toutes les valeurs" -ForegroundColor White
Write-Host "‚Ä¢ Tri des cl√©s pour un hachage d√©terministe" -ForegroundColor White

Write-Host "`nüß™ Tests √† effectuer:" -ForegroundColor Cyan
Write-Host "1. Ouvrir http://localhost:3001/exporters dans le navigateur" -ForegroundColor White
Write-Host "2. Ouvrir la console du navigateur (F12)" -ForegroundColor White
Write-Host "3. Tester les sc√©narios suivants:" -ForegroundColor White
Write-Host "   a) Cliquer sur 'Filtres avanc√©s'" -ForegroundColor Gray
Write-Host "   b) S√©lectionner une r√©gion" -ForegroundColor Gray
Write-Host "   c) S√©lectionner un type (Exportateur/Acheteur local)" -ForegroundColor Gray
Write-Host "   d) S√©lectionner un statut (Actif/Expir√©/Suspendu)" -ForegroundColor Gray
Write-Host "   e) Taper un nom dans le champ de recherche" -ForegroundColor Gray
Write-Host "   f) Combiner plusieurs filtres" -ForegroundColor Gray
Write-Host "   g) Effacer les filtres et les r√©appliquer" -ForegroundColor Gray
Write-Host "   h) Naviguer entre les pages avec des filtres actifs" -ForegroundColor Gray

Write-Host "`nüîç V√©rifications sp√©cifiques:" -ForegroundColor Yellow
Write-Host "‚Ä¢ Aucune erreur 'cyclic object value' dans la console" -ForegroundColor White
Write-Host "‚Ä¢ Aucune erreur 'Uncaught TypeError' dans la console" -ForegroundColor White
Write-Host "‚Ä¢ Les filtres se mettent √† jour correctement" -ForegroundColor White
Write-Host "‚Ä¢ Les r√©sultats de recherche changent selon les filtres" -ForegroundColor White
Write-Host "‚Ä¢ La pagination fonctionne avec les filtres" -ForegroundColor White

Write-Host "`nüìä Code de la fonction corrig√©e:" -ForegroundColor Cyan
Write-Host "const safeSerializeFilters = (filters: ExportateurFilters | undefined): string => {" -ForegroundColor Gray
Write-Host "  if (!filters) return '';" -ForegroundColor Gray
Write-Host "  try {" -ForegroundColor Gray
Write-Host "    const cleanFilters: Record<string, string> = {};" -ForegroundColor Gray
Write-Host "    const allowedKeys = ['regionCode', 'type', 'statut', 'nom'];" -ForegroundColor Gray
Write-Host "    for (const key of allowedKeys) {" -ForegroundColor Gray
Write-Host "      const value = filters[key];" -ForegroundColor Gray
Write-Host "      if (value !== undefined && value !== null && value !== '') {" -ForegroundColor Gray
Write-Host "        cleanFilters[key] = String(value);" -ForegroundColor Gray
Write-Host "      }" -ForegroundColor Gray
Write-Host "    }" -ForegroundColor Gray
Write-Host "    const sortedKeys = Object.keys(cleanFilters).sort();" -ForegroundColor Gray
Write-Host "    return sortedKeys.map(key => \`\${key}:\${cleanFilters[key]}\`).join('|');" -ForegroundColor Gray
Write-Host "  } catch (error) {" -ForegroundColor Gray
Write-Host "    console.warn('Error serializing filters:', error);" -ForegroundColor Gray
Write-Host "    return '';" -ForegroundColor Gray
Write-Host "  }" -ForegroundColor Gray
Write-Host "};" -ForegroundColor Gray

Write-Host "`nüåê Ouverture de la page de test..." -ForegroundColor Yellow
Start-Process "http://localhost:3001/exporters"

Write-Host "`n‚ú® Test termin√©! V√©rifiez manuellement les r√©sultats." -ForegroundColor Green
Write-Host "üí° Si l'erreur persiste, nous devrons examiner plus en d√©tail l'objet filters" -ForegroundColor Yellow
